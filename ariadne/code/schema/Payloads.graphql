type TokenPayload {
    accessToken: String!
    refreshToken: String!
}

type AddInvoicePayload {
    rHash: String!
    paymentRequest: String!
    addIndex: Int!
}

type PayInvoicePayload {
    ok: Boolean!
    error: String
    payment: Invoice
}

type AddressPayload {
    ok: Boolean!
    error: String
    address: String
}

type BalancePayload {
    ok: Boolean!
    error: String
    availableBalance: Int
}

type InvoicesPayload {
    ok: Boolean!
    error: String
    invoices: [Invoice]!
}

type DecodeInvoicePayload {
    ok: Boolean!
    error: String
    destination: String
    paymentHash: String
    numSatoshis: Int
    timestamp: Int
    expiry: Int
    description: String
    descriptionHash: String
    fallbackAddr: String
}

type CheckRouteInvoicePayload {
    ok: Boolean!
    error: String
}

type PendingPayload {
    ok: Boolean!
    error: String
}

type InfoPayload {
    ok: Boolean!
    version: String
    identityPubkey: String
    alias: String
    color: String
    numPendingChannels: Int
    numActiveChannel: Int
    numInactiveChannels: Int
    numPeers: Int
    blockHeight: Int
    blockHash: String
    bestHeaderTimestamp: Int
    syncedToChain: Boolean
    syncedToGraph: Boolean
    testnet: Boolean
    #"chains": <array Chain>, 
    #"uris": <array string>,
    #"features": <array FeaturesEntry>,
}

type TxsPayload {
    ok: Boolean!
    error: String
    
}

type GetPeersPayload {
    ok: Boolean!
    error: String
    peerInfo: [PeerInfo]!
}
