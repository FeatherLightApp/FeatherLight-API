version: '3'
services: 
    btcd:
        image: btcd:latest
        build: 
            context: 'btcd/'
        volumes:
            # - shared:/rpc
            - ${BITCOIN_VOL}:/data
            - ./btcd/btcd.conf:/root/.btcd/btcd.conf
        restart: unless-stopped
        env_file: 
            - container.env
    
    lnd:
        image: lnd:latest
        build:
            context: 'lnd/'
        volumes: 
            # - shared:/rpc
            - ${LND_VOL}:/root/.lnd
            - ${BITCOIN_VOL}:/bitcoindata
            - ./lnd/lnd.conf:/root/.lnd/lnd.conf
        restart: unless-stopped
        ports: 
            - '9735:9735'
        env_file: 
            - container.env
        depends_on: 
            - btcd

    lndmon:
        image: lndmon:latest
        build:
            context: 'monitor/lndmon/'
        volumes:
            - ${LND_VOL}:/root/.lnd
        restart: unless-stopped
        command: --prometheus.listenaddr=0.0.0.0:9092 --lnd.network=testnet --lnd.host=lnd --lnd.macaroondir=/root/.lnd/data/chain/bitcoin/testnet --lnd.tlspath=/root/.lnd/tls.cert
        depends_on:
            - lnd
    
    prometheus:
        image: prom/prometheus:v2.10.0
        volumes:
            - ./monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-storage:/prometheus
        # Reasoning behind Prometheus command query flags:
        # --query.max-samples: each Prometheus data sample is 16 bytes.
        #                      16B * 31250000 = 1/2 GB.
        # --query.max-concurrency: the max # of concurrent queries (default is 20).
        # these parameters are intended to limit the amount of memory Prometheus
        # uses for its queries to ~1GB, because it's sensitive to OOMs.
        command: "--config.file=/etc/prometheus/prometheus.yml --query.max-samples=31250000 --query.max-concurrency=2"
        restart: unless-stopped
        depends_on:
        - lndmon

    grafana:
        image: grafana/grafana:6.2.0
        build:
            context: 'monitor/grafana/'
        ports:
            - "3001:3000"
        volumes:
            - grafana-storage:/var/lib/grafana
        depends_on:
            - prometheus
    
    post_start:
        build: monitor/post_start/
        depends_on:
            - grafana
            - prometheus

    ariadne:
        image: graphlnd:latest
        build: 
            context: 'ariadne_server/'
        volumes: 
            - ./ariadne_server/:/app
            - ${LND_VOL}:/root/.lnd
        depends_on: 
            - lnd
            - redis
            - postgres
        restart: unless-stopped
        env_file: 
            - container.env

    redis:
        image: redis:alpine
        volumes: 
            - ${REDIS_VOL}:/data
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        restart: unless-stopped
        env_file: 
            - container.env

    postgres:
        image: postgres:alpine
        volumes:
            - ${POSTGRES_VOL}:/var/lib/postgresql/data
        restart: unless-stopped
        env_file: 
            - container.env
        ports: 
            - '5432:5432'
            

volumes:
    grafana-storage:
    prometheus-storage:
