type TokenPayload {
    accessToken: String!
    refreshToken: String!
}

type DecodeInvoicePayload {
    error: String
    destination: String
    paymentHash: String
    numSatoshis: Int
    timestamp: Int
    expiry: Int
    description: String
    descriptionHash: String
    fallbackAddr: String
}

# type CheckRouteInvoicePayload {
#     ok: Boolean!
#     error: String
# }

# type PendingPayload {
#     ok: Boolean!
#     error: String
# }

type InfoPayload {
    version: String
    identityPubkey: String
    alias: String
    color: String
    numPendingChannels: Int
    numActiveChannel: Int
    numInactiveChannels: Int
    numPeers: Int
    blockHeight: Int
    blockHash: String
    bestHeaderTimestamp: Int
    syncedToChain: Boolean
    syncedToGraph: Boolean
    testnet: Boolean
    #"chains": <array Chain>, 
    #"uris": <array string>,
    #"features": <array FeaturesEntry>,
}

# type TxsPayload {
#     ok: Boolean!
#     error: String
    
# }

# type GetPeersPayload {
#     ok: Boolean!
#     error: String
#     peerInfo: [PeerInfo]!
# }
